#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include "keys_en_gb_extended.h"

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/mouse.h>

#define BASE0 0
#define SMB1 1
#define MED2 2


/ {
    macros {
        vim_yank: vim_yank {
            label = "ZM_vim_yank";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GB_DQT &kp GB_PLUS &kp Y>
                ;
        };

        vim_paste: vim_paste {
            label = "ZM_vim_paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp GB_DQT &kp GB_PLUS &kp P>
                ;
        };
    };
    behaviors {
        ht_tp: hold_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        base0_layer {
            bindings = <
                &kp ESC  &kp N1 &kp N2 &kp N3 &kp N4 &kp N5  &kp GRAVE                       &kp LBKT &kp N6  &kp N7  &kp N8  &kp N9  &kp N0   &to 1
&kp TAB    &kp Q  &kp W    &kp E   &kp R   &kp T  &kp BSLH                   &kp RBKT &kp Y   &kp U   &kp I   &kp O   &kp P    &kp RSHIFT
&kp LSHIFT  &kp A  &kp S    &kp D    &kp F  &kp G &kp SEMI                   &kp SQT  &kp H   &kp J   &kp K   &kp L   &kp FSLH &kp ENTER
&kp CAPS &kp Z  &kp X    &kp C    &kp V     &kp B                                     &kp N   &kp M   &kp COMMA &kp DOT  &kp RWIN &kp DEL 
&kp LCTRL  &kp LALT  &kp END &kp HOME  &kp BACKSPACE  &kp ENTER                       &kp EQUAL &kp SPACE  &kp KP_PLUS  &kp KP_MINUS   &kp KP_MULTIPLY  &kp KP_DIVIDE  
&kp DOWN &kp LEFT	&kp UP  &kp RIGHT 	                                              &kp RSHIFT   &kp MINUS &kp PG_UP &kp PG_DN
            >;
        };

        smb1_layer {
            bindings = <
                &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none &none &sys_reset                   &sys_reset  &none &none &none &none &none &to 0
    &none &none &none &none &none &none &none                                             &none       &kp F2 &kp F8 &kp F9 &kp F12 &none &none
    &none &bt BT_CLR &none &none &none &none  &none                                       &none       &none &none &none &none &none &none
    &none &out OUT_TOG &none &none &none &none                                                        &none &none &none &none &none &none 
    &none &none &none &none &none &none                                                               &none &none &none &none &none &none	
    &none &none &none &none                                                                           &none &none &none &none
            >;
        };

        med2_layer {
            bindings = <
                &none &none &none &none &none &none &none                                             &none &none &none &none &none &none &none
    &none &none &none &none &none &none &none                                             &none &none &none &none &none &none &none
    &none &none &none &none &none &none &none                                             &none &none &none &none &none &none &none
    &none &none &none &none &none &none                                                         &none &none &none &none &none &none 
    &none &none &none &none &none &none                                                         &none &none &none &none &none &none	
    &none &none &none &none                         	                                        &none &none &none &none
            >;
        };
    };
};
